package com.example.backjeon
import android.content.SharedPreferences
import android.os.Bundle
import android.util.TypedValue
import android.widget.*
import androidx.appcompat.app.AppCompatActivity
import androidx.appcompat.app.AppCompatDelegate
import androidx.core.text.HtmlCompat
import com.example.backjeon.Comment
import com.example.backjeon.R
import org.json.JSONArray

class PostDetailActivity : AppCompatActivity() {

    private lateinit var titleTextView: TextView
    private lateinit var contentTextView: TextView
    private lateinit var commentInput: EditText
    private lateinit var addCommentButton: Button
    private lateinit var commentTextView: TextView
    private lateinit var commentSection: LinearLayout

    private var comments: MutableList<Comment> = mutableListOf()
    private lateinit var prefs: SharedPreferences
    private lateinit var postKey: String

    override fun onCreate(savedInstanceState: Bundle?) {
        // 1. SharedPreferences 준비
        prefs = getSharedPreferences("comments_prefs", MODE_PRIVATE)

        // 2. (다크모드 설정 등 생략, 기존 코드 유지)

        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_post_detail)

        titleTextView = findViewById(R.id.detail_title)
        contentTextView = findViewById(R.id.detail_content)
        commentInput = findViewById(R.id.comment_input)
        addCommentButton = findViewById(R.id.comment_submit)
        commentTextView = findViewById(R.id.text_comments)
        commentSection = findViewById(R.id.comment_section)

        // 3. 게시글 정보 받기
        val title = intent.getStringExtra("title") ?: ""
        val content = intent.getStringExtra("content") ?: ""
        titleTextView.text = title
        contentTextView.text = content

        // 4. 게시글별 고유 키 생성 (제목+내용 해시)
        postKey = "comments_${(title + content).hashCode()}"

        // 5. SharedPreferences에서 댓글 불러오기
        comments = loadCommentsFromPrefs().toMutableList()

        updateComments()

  private fun loadCommentsFromPrefs(): List<Comment> {
      val jsonStr = prefs.getString(postKey, null)
      return if (jsonStr == null) {
          // 최초 진입: 기본 댓글 3개 추가
          val defaultComments = listOf(
              Comment("관리자", "환영합니다! 자유롭게 댓글을 남겨보세요.", getCurrentTime()),
              Comment("홍길동", "첫 댓글입니다!", getCurrentTime()),
              Comment("김철수", "좋은 정보 감사합니다.", getCurrentTime())
          )
          // SharedPreferences에 저장
          comments = defaultComments.toMutableList()
          saveCommentsToPrefs()
          defaultComments
      } else {
          val jsonArr = JSONArray(jsonStr)
          val list = mutableListOf<Comment>()
          for (i in 0 until jsonArr.length()) {
              val obj = jsonArr.getJSONObject(i)
              list.add(Comment.fromJson(obj))
          }
          list
      }
  }

    }

    private fun updateComments() {
        commentSection.removeAllViews()
        if (comments.isEmpty()) {
            commentTextView.text = "댓글이 없습니다"
        } else {
            commentTextView.text = ""
            for (comment in comments) {
                val commentView = TextView(this)
                val displayText = "<b>${comment.nickname}</b> (${comment.timestamp})<br>${comment.content}"
                commentView.text = HtmlCompat.fromHtml(displayText, HtmlCompat.FROM_HTML_MODE_LEGACY)
                commentView.setTextColor(getColor(R.color.text_primary))
                commentView.setTextSize(TypedValue.COMPLEX_UNIT_SP, 14f)
                commentView.setPadding(0, 8, 0, 8)
                commentSection.addView(commentView)
            }
        }
    }

    // SharedPreferences에 댓글 저장
    private fun saveCommentsToPrefs() {
        val jsonArr = JSONArray()
        for (c in comments) {
            jsonArr.put(c.toJson())
        }
        prefs.edit().putString(postKey, jsonArr.toString()).apply()
    }

    // SharedPreferences에서 댓글 불러오기
    private fun loadCommentsFromPrefs(): List<Comment> {
        val jsonStr = prefs.getString(postKey, null) ?: return emptyList()
        val jsonArr = JSONArray(jsonStr)
        val list = mutableListOf<Comment>()
        for (i in 0 until jsonArr.length()) {
            val obj = jsonArr.getJSONObject(i)
            list.add(Comment.fromJson(obj))
        }
        return list
    }

    private fun getCurrentTime(): String {
        val sdf = java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss")
        return sdf.format(java.util.Date())
    }
}
